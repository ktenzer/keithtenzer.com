I"Õ"<h1><img class="alignnone  wp-image-12889" src="/assets/2018/12/Kubernetes-logo.png" alt="Kubernetes-logo" width="181" height="151" /> <img class="alignnone  wp-image-12891" src="/assets/2018/12/is_not_4.png" alt="is_not_4" width="110" height="110" />Â <img class="alignnone  wp-image-12890" src="/assets/2018/12/OpenShift-LogoType.svg_.png" alt="OpenShift-LogoType.svg" width="125" height="133" /></h1>
<h2>Overview</h2>
<p>Often a lot of people seem to confuse Kubernetes with OpenShift or a platform-as-a-service (PaaS). Kubernetes is of course on it's own, not. It is an orchestration layer or technology for containers but a lot is missing to really call it a platform. OpenShift is Red Hat enterprise Kubernetes platform. It contains Kubernetes but also a whole lot more which make it a true platform. So which is right for you? It depends a lot on your requirements and what you are trying to achieve. The purpose of this article is to setup an environment for running a workshop that compares the Kubernetes experience with OpenShift in order to gain more insight and understanding in what you may actually need. Many people sit down with slides or at a whiteboard, but I really find that is not adequate and you really need to experience it, first hand.</p>
<p><!--more--></p>
<p>This article will guide you through building an OpenStack IaaS environment and then create a vanilla Kubernetes environment using Magnum (a OpenStack service for providing container technologies) and one using OpenShift. Both environments will run on OpenStack. You will need a physical system. My recommendation is 64GB RAM, 1-2 Socket CPU and SSDs. You can get such a server on a monthly basis at the Hetzner cloud for cheap, including 15 additional IPV4 floating ips. The guide explains how to set everything up on Hetzner as well. Hetzner provides an auction market for used hardware which is why it is so cheap. Below is a link to get going on ordering a Hetzner server.</p>
<p><a href="https://www.hetzner.com/sb">https://www.hetzner.com/sb</a></p>
<h2>Deploy OpenStack Environment</h2>
<p>You can choose whatever OpenStack distribution you want as long as it has Magnum and LBaaS or Octavia. Currently none of the major distributions ship Magnum. This is because Magnum is not yet very stable and is considered experimental. Nevertheless it is a good way to get a vanilla Kubernetes cluster going.</p>
<p>We will be using the RDO community distribution of OpenStack which running on CentOS, this allows for automatically configuring Magnum. The following blog is a step-by-step guide of deploying OpenStack on Hetzner.</p>
<p><a href="https://keithtenzer.com/2018/07/17/openstack-13-queens-lab-installation-and-configuration-guide-for-hetzner-root-servers/">https://keithtenzer.com/2018/07/17/openstack-13-queens-lab-installation-and-configuration-guide-for-hetzner-root-servers/</a></p>
<p>If you are interested in an automated approach a colleague of mine has written an Ansible playbook to deploy OpenStack on hetzner for this use case.</p>
<p><a href="https://github.com/ktenzer/openshift-on-openstack-123">https://github.com/ktenzer/openshift-on-openstack-123</a></p>
<h2>Configure Magnum Kubernetes Cluster</h2>
<p>Magnum provides templates to deploy kubernetes, mesos or docker swarn. The idea is to create a template and then deploy a cluster from the template. Heat is used to deploy the cluster. The concept of Magnum is similar to that of Kubernetes in the cloud (Amazon, Microsoft and Google). There is no multi-tenancy or isolation between namespaces. You typically end up running lots and lots of clusters, one per application maybe even. Below is a diagram to help visualize the deployment.</p>
<p><img class="alignnone  wp-image-12888" src="/assets/2018/12/k8s.png" alt="k8s" width="1047" height="576" /></p>
<p>Download Fedora Atomic Image</p>
<pre>$ wget https://download.fedoraproject.org/pub/alt/atomic/stable/Fedora-Atomic-27-20180419.0/CloudImages/x86_64/images/Fedora-Atomic-27-20180419.0.x86_64.qcow2</pre>
<p>Add Image to OpenStack Glance</p>
<pre>$ openstack image create --disk-format=qcow2 --container-format=bare \
--file=Fedora-Atomic-27-20180419.0.x86_64.qcow2 \
--property os_distro='fedora-atomic' --public fedora-atomic-latest</pre>
<p><strong>Create Template</strong></p>
<p>Under "Container Infra" -&gt; "Cluster Templates" create a new template. Select Kubernetes for the orchestration engine.</p>
<p><img class="alignnone size-full wp-image-12872" src="/assets/2018/12/magnum_1.png" alt="magnum_1" width="946" height="377" /></p>
<p>Choose flavor and configure storage settings.</p>
<p><img class="alignnone size-full wp-image-12874" src="/assets/2018/12/magnum_2-1.png" alt="magnum_2" width="945" height="486" /></p>
<p>Configure container network settings.</p>
<p><img class="alignnone size-full wp-image-12875" src="/assets/2018/12/magnum_3.png" alt="magnum_3" width="940" height="779" /></p>
<p><strong>Deploy Template</strong></p>
<p>Once the template is created you simply click deploy cluster from the template. Choose name for cluster and select proper template.</p>
<p><img class="alignnone size-full wp-image-12876" src="/assets/2018/12/magnum_4.png" alt="magnum_4" width="940" height="490" /></p>
<p>Choose number of masters and nodes and size of docker volume.</p>
<p><img class="alignnone size-full wp-image-12877" src="/assets/2018/12/magnum_5.png" alt="magnum_5" width="942" height="358" /></p>
<p>Choose flavors and admin key for accessing cluster.</p>
<p><img class="alignnone size-full wp-image-12878" src="/assets/2018/12/magnum_6.png" alt="magnum_6" width="941" height="436" /></p>
<p>Follow deployment from Heat.</p>
<pre># openstack stack event list k8s-demo-4ogiuqtpozdr
2018-12-15 10:16:42Z [k8s-demo-4ogiuqtpozdr]: CREATE_IN_PROGRESS Stack CREATE started
2018-12-15 10:16:43Z [k8s-demo-4ogiuqtpozdr.nodes_server_group]: CREATE_IN_PROGRESS state changed
2018-12-15 10:16:43Z [k8s-demo-4ogiuqtpozdr.nodes_server_group]: CREATE_COMPLETE state changed
2018-12-15 10:16:44Z [k8s-demo-4ogiuqtpozdr.network]: CREATE_IN_PROGRESS state changed
2018-12-15 10:16:45Z [k8s-demo-4ogiuqtpozdr.secgroup_kube_minion]: CREATE_IN_PROGRESS state changed
2018-12-15 10:16:46Z [k8s-demo-4ogiuqtpozdr.secgroup_kube_master]: CREATE_IN_PROGRESS state changed
2018-12-15 10:16:46Z [k8s-demo-4ogiuqtpozdr.secgroup_kube_minion]: CREATE_COMPLETE state changed
2018-12-15 10:16:47Z [k8s-demo-4ogiuqtpozdr.network]: CREATE_COMPLETE state changed
2018-12-15 10:16:47Z [k8s-demo-4ogiuqtpozdr.api_lb]: CREATE_IN_PROGRESS state changed
2018-12-15 10:16:47Z [k8s-demo-4ogiuqtpozdr.etcd_lb]: CREATE_IN_PROGRESS state changed
2018-12-15 10:16:48Z [k8s-demo-4ogiuqtpozdr.secgroup_kube_master]: CREATE_COMPLETE state changed
2018-12-15 10:17:01Z [k8s-demo-4ogiuqtpozdr.etcd_lb]: CREATE_COMPLETE state changed
2018-12-15 10:17:03Z [k8s-demo-4ogiuqtpozdr.api_lb]: CREATE_COMPLETE state changed
2018-12-15 10:17:03Z [k8s-demo-4ogiuqtpozdr.kube_masters]: CREATE_IN_PROGRESS state changed
2018-12-15 10:24:23Z [k8s-demo-4ogiuqtpozdr.kube_masters]: CREATE_COMPLETE state changed
2018-12-15 10:24:23Z [k8s-demo-4ogiuqtpozdr.api_address_lb_switch]: CREATE_IN_PROGRESS state changed
2018-12-15 10:24:24Z [k8s-demo-4ogiuqtpozdr.etcd_address_lb_switch]: CREATE_IN_PROGRESS state changed
2018-12-15 10:24:25Z [k8s-demo-4ogiuqtpozdr.api_address_lb_switch]: CREATE_COMPLETE state changed
2018-12-15 10:24:25Z [k8s-demo-4ogiuqtpozdr.etcd_address_lb_switch]: CREATE_COMPLETE state changed
2018-12-15 10:24:25Z [k8s-demo-4ogiuqtpozdr.api_address_floating_switch]: CREATE_IN_PROGRESS state changed
2018-12-15 10:24:25Z [k8s-demo-4ogiuqtpozdr.kube_minions]: CREATE_IN_PROGRESS state changed
2018-12-15 10:24:26Z [k8s-demo-4ogiuqtpozdr.api_address_floating_switch]: CREATE_COMPLETE state changed
2018-12-15 10:30:32Z [k8s-demo-4ogiuqtpozdr.kube_minions]: CREATE_COMPLETE state changed
2018-12-15 10:30:32Z [k8s-demo-4ogiuqtpozdr]: CREATE_COMPLETE Stack CREATE completed successfully</pre>
<p><strong>[Kubernetes Master]</strong></p>
<p>Log into the Kubernetes master and get the admin service account token.</p>
<pre># kubectl get secrets -n kube-system
NAME TYPE DATA AGE
admin-token-gkfx2 kubernetes.io/service-account-token 3 1h
coredns-token-wg568 kubernetes.io/service-account-token 3 1h
default-token-9h58d kubernetes.io/service-account-token 3 1h
heapster-token-2kr9d kubernetes.io/service-account-token 3 1h
kube-dns-autoscaler-token-8h4lg kubernetes.io/service-account-token 3 1h
kubernetes-dashboard-certs Opaque 0 1h
kubernetes-dashboard-key-holder Opaque 2 55m
kubernetes-dashboard-token-tfxjj kubernetes.io/service-account-token 3 1h</pre>
<pre># kubectl describe secret admin-token-gkfx2 -n kube-system
Name: admin-token-gkfx2
Namespace: kube-system
Labels: &lt;none&gt;
Annotations: kubernetes.io/service-account.name=admin
kubernetes.io/service-account.uid=8796d78d-0053-11e9-9468-fa163ed886d7
</pre>
:ET