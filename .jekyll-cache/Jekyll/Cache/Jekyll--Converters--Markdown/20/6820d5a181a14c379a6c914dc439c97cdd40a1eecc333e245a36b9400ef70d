I"<h3><img class="alignnone size-full wp-image-3655" src="/assets/2016/08/screenshot-from-2016-08-04-144007.png" alt="Screenshot from 2016-08-04 14:40:07" width="1834" height="615" /></h3>
<h3>Overview</h3>
<p>In this article we will setup a OpenShift Enterprise 3.2 all-in-one configuration. We will also setup the integration with CloudForms that allows additional management of OpenShift environments.</p>
<p>OpenShift has several different roles: masters, nodes, etcd and load balancers. An all-in-one setup means running all service on a single system. Since we are only using a single system a load balancer or ha-proxy won't be configured. If you would like to read more about OpenShift I can recommend the following:</p>
<ul>
<li><a href="https://blog.openshift.com/">General OpenShift Product Blogs</a></li>
<li><a href="https://keithtenzer.com/2015/08/20/openshift-v3-unlocking-the-power-of-persistent-storage/">Persistent Storage</a></li>
<li><a href="http://www.opensourcerers.org/openshift-3-1-networking-from-a-containerworkload-point-of-view-part-1-container-networking-on-a-plain-docker-host/">OpenShift Networking Part I</a></li>
<li><a href="http://www.opensourcerers.org/openshift-networking-from-a-containerworkload-point-of-view-part-2-container-networking-on-an-openshift-node/">OpenShift Networking Part II</a></li>
</ul>
<p><!--more--></p>
<h3>Prerequisites</h3>
<p>Configure a VM with following:</p>
<ul>
<li>RHEL 7.2</li>
<li>2 CPUs</li>
<li>4096 RAM</li>
<li>30GB disk for OS</li>
<li>25GB disk for docker images</li>
</ul>
<pre class="nowrap"># subscription-manager repos --disable="*"
# subscription-manager repos \
    --enable="rhel-7-server-rpms" \
    --enable="rhel-7-server-extras-rpms" \
    --enable="rhel-7-server-ose-3.2-rpms"</pre>
<pre class="nowrap"># yum install -y wget git net-tools bind-utils iptables-services bridge-utils bash-completion</pre>
<pre class="nowrap"># yum update -y</pre>
<pre class="nowrap"># yum install -y atomic-openshift-utils</pre>
<pre class="nowrap"># systemctl reboot</pre>
<pre class="nowrap"># yum install -y docker-1.10.3</pre>
<pre># vi /etc/sysconfig/docker
OPTIONS='--selinux-enabled --insecure-registry 172.30.0.0/16'</pre>
<pre class="nowrap"># cat &lt;&lt;EOF &gt; /etc/sysconfig/docker-storage-setup
DEVS=/dev/vdb
VG=docker-vg
EOF</pre>
<pre class="nowrap"># docker-storage-setup</pre>
<pre># systemctl enable docker</pre>
<pre># systemctl start docker</pre>
<pre># ssh-keygen</pre>
<pre># ssh-copy-id -i /root/.ssh/id_rsa-pub ose3-master.lab.com</pre>
<h3>DNS Setup</h3>
<p>DNS is a requirement for OpenShift Enterprise. In fact most issues you may run into are a result of not having a properly working DNS environment. For OpenShift you can either use dnsmasq or bind. I recommend using bind but in this article I will cover both options.</p>
<h4>DNSMASQ</h4>
<p>A colleague Ivan Mckinely was nice enough to create an ansible playbook for deploying dnsmasq. To deploy dnsmasq run following steps on OpenShift master.</p>
<pre># git clone https://github.com/ivanthelad/ansible-aos-scripts.git</pre>
<pre>#cd ansible-aos-scripts</pre>
<p>Edit inventory file and set dns to IP of the system that should be providing DNS. Also ensure nodes and masters have correct IPs for your OpenShift servers. In our case 192.168.122.60 is master, node and DNS.</p>
<pre>#vi inventory
</pre>
:ET