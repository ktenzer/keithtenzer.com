I"<h3><img class="alignnone size-full wp-image-2249" src="/assets/2016/04/networking.jpg" alt="Networking" width="460" height="240" /></h3>
<h3>Overview</h3>
<p>In this article we will look at how to setup L3 HA in OpenStack Neutron. OpenStack networking can be rather complex, certainly when coming from a traditional networking world. The basic principles behind networking have not changed but OpenStack introduces lots of abstractions that make end-to-end visibility of network traffic flows very difficult to follow. As such before we get into the material it would be good to provide an overview of L3 as it pertains to OpenStack Neutron.<br />
<!--more--></p>
<p>In Neutron L3 allows you to provide external connectivity to instances running in tenant networks that by nature are non-routable. Tenant networks are L2 networks and as such can only communicate with instances on same tenant network. L3 is implemented in Neutron using floatingÂ ip addresses. A floating ip is a address of an external network that uses NAT (SNAT/DNAT) to forward traffic to instance ip on tenant network. The below diagram illustrates this connectivity.</p>
<p><img class="alignnone size-full wp-image-2186" src="/assets/2016/04/screenshot-from-2016-04-25-120516.png" alt="Screenshot from 2016-04-25 12:05:16" width="513" height="523" /></p>
<p>In this caseÂ we have two networks, a tenant network 10.10.1.0/24 named private and an external network 192.168.122.0/24 named public. The instance mycirros has the ip of 10.10.1.102. In order to communicate with other instances or devices outside the tenant network 10.10.1.0/24 anÂ L3 router is required. Note that floating ips are only associated to an instance, the instance itself is completely unaware of floating ip. If you were to do an "ip a" on an instance you would not see the floating ip. Neutron implements NAT (SNAT/DNAT) in order to forward traffic between instance ip and floating ip using iptables rules. Since these rules can only be configured on a single network node per floating ip we have a problem. If that network node is lost then external connectivity will be interrupted to those instances.</p>
<p>Neutron solves this problem with L3 HA. In L3 HA you configure multiple network nodes and on each the Open vSwitch (OVS) agent plugin. In event that a network node is lost, the HA router willÂ failover to a standy on another node and connectivity will not be interrupted for those instances. Neutron ml2 plugins exist for many different SDN solutions not just OVS. Out-of-the-box OVS is of course provided. If you are using another SDN then you most likely would not care about L3 HA within Neutron since you wouldn't use the L3 agent but rather the SDN plugin and the SDN would provide its own HA solution.</p>
<h3>Install and Configure OpenStack Kilo</h3>
<p>In this example we will configure two systems running RHEL or CentOS 7.1. We will use RDO (packstack) to deploy OpenStack Kilo. In OpenStack there are different roles a node can have: controller, network, compute and storage. Things can be customized to even break out individual services like keystone. We will deploy one node as a controller, compute and network node. The second node will only be a network node. This is the minimum configuration required to configure L3 HA since you need two network nodes.</p>
<p>[Controller node]</p>
<ul>
<li>Install RHEL or CentOS 7.1.</li>
<li>Ensure name resolution is working</li>
</ul>
<pre style="padding-left:30px;">#vi /etc/hosts</pre>
<pre style="padding-left:30px;">192.168.122.81 osp7-ctr1.lab.com osp7-ctr1</pre>
<ul>
<li>Ensure the hostname is set statically.</li>
</ul>
<pre style="padding-left:30px;">#hostnamectl set-hostname osp7-ctr1.lab.com</pre>
<ul>
<li>Disable network manager.</li>
</ul>
<pre style="padding-left:30px;">#systemctl disable NetworkManager.service</pre>
<ul>
<li>Disable firewalld to make configuration easier.</li>
</ul>
<pre style="padding-left:30px;"> #systemctl disable firewalld.service</pre>
<ul>
<li>For RHEL systems register with subscription manager.</li>
</ul>
<pre style="padding-left:30px;"> #subscription-manager register
 #subscription-manager subscribe --auto
 #subscription-manager repos --disable=*
 #subscription-manager repos --enable=rhel-7-server-rpms
 #subscription-manager repos --enable=rhel-7-server-openstack-7.0-rpms</pre>
<ul>
<li>Install yum-utils and update the system.</li>
</ul>
<pre style="padding-left:30px;"> #yum install -y yum-utils
 #yum update -y
 #reboot</pre>
<p>[Network node]</p>
<ul>
<li>Install RHEL or CentOS 7.1.</li>
<li>Ensure name resolution is working</li>
</ul>
<pre style="padding-left:30px;">#vi /etc/hosts</pre>
<pre style="padding-left:30px;">192.168.122.82 osp7-net1.lab.com osp7-net1</pre>
<ul>
<li>Ensure the hostname is set statically.</li>
</ul>
<pre style="padding-left:30px;">#hostnamectl set-hostname osp7-net1.lab.com</pre>
<ul>
<li>Disable network manager.</li>
</ul>
<pre style="padding-left:30px;">#systemctl disable NetworkManager.service</pre>
<ul>
<li>Disable firewalld to make configuration easier.</li>
</ul>
<pre style="padding-left:30px;"> #systemctl disable firewalld.service</pre>
<ul>
<li>For RHEL systems register with subscription manager.</li>
</ul>
<pre style="padding-left:30px;"> #subscription-manager register
 #subscription-manager subscribe --auto
 #subscription-manager repos --disable=*
 #subscription-manager repos --enable=rhel-7-server-rpms
 #subscription-manager repos --enable=rhel-7-server-openstack-7.0-rpms</pre>
<ul>
<li>Install yum-utils and update the system.</li>
</ul>
<pre style="padding-left:30px;"> #yum install -y yum-utils
 #yum update -y
 #reboot</pre>
<p>[Controller node]</p>
<ul>
<li>Install packstack packages.</li>
</ul>
<pre style="padding-left:30px;"> #yum install -y openstack-packstack</pre>
<ul>
<li>Create packstack answers file for customizing the installer.</li>
</ul>
<pre style="padding-left:30px;">#packstack --gen-answer-file /root/answers.txt</pre>
<ul>
<li>Update the packstack answers file. Add the second host (in this case 192.168.122.82) to list of network hosts.</li>
</ul>
<pre style="padding-left:30px;">#vi /root/answers.txt
 CONFIG_NETWORK_HOSTS=192.168.122.81,192.168.122.82
 CONFIG_KEYSTONE_ADMIN_PW=redhat
 CONFIG_HORIZON_SSL=y
 CONFIG_PROVISION_DEMO=n
 CONFIG_HEAT_INSTALL=y
 CONFIG_HEAT_CLOUDWATCH_INSTALL=y
 CONFIG_HEAT_CFN_INSTALL=y
 CONFIG_SAHARA_INSTALL=y
 CONFIG_TROVE_INSTALL=y
 CONFIG_CEILOMETER_INSTALL=y
 CONFIG_LBAAS_INSTALL=y</pre>
<ul>
<li>Install OpenStack using packstack from RDO.</li>
</ul>
<pre style="padding-left:30px;">#packstack --answer-file /root/answers.txt</pre>
<pre style="padding-left:30px;">. /root/keystonerc_admin</pre>
<ul>
<li>Check status of openstack services.</li>
</ul>
<pre style="padding-left:30px;">#openstack-status</pre>
<p>[Controller and Network nodes]</p>
<ul>
<li>Backup the ifcfg-etho script.</li>
</ul>
<pre style="padding-left:30px;">#cp /etc/sysconfig/network-scripts/ifcfg-eth0 /root/</pre>
<ul>
<li>Configure external bridge for floating ip networks.</li>
</ul>
<pre style="padding-left:30px;">#vi /etc/sysconfig/network-scripts/ifcfg-eth0
 DEVICE=eth0
 ONBOOT=yes
 TYPE=OVSPort
 DEVICETYPE=ovs
 OVS_BRIDGE=br-ex</pre>
<pre style="padding-left:30px;">#viÂ /etc/sysconfig/network-scripts/ifcfg-br-ex
 DEVICE=br-ex
 BOOTPROTO=static
 ONBOOT=yes
 TYPE=OVSBridge
 DEVICETYPE=ovs
 USERCTL=yes
 PEERDNS=yes
 IPV6INIT=no
 IPADDR=&lt;www.xxx.yyy.zzz&gt;
 NETMASK=255.255.255.0
 GATEWAY=&lt;GW IP&gt;
 DNS1=&lt;DNS IP&gt;</pre>
<ul>
<li>Add the eht0 physical interface to the br-ex bridge in openVswitch for floating IP networks.</li>
</ul>
<pre style="padding-left:30px;">#ovs-vsctl add-port br-ex eth0 ; systemctl restart network.service</pre>
<p>&nbsp;</p>
<h3>Configure L3 HA</h3>
<p>[Controller node]</p>
<ul>
<li>Configure common settings and enable L3 HA.</li>
</ul>
<pre style="padding-left:30px;">#openstack-config --set /etc/neutron/neutron.conf DEFAULT l3_ha True
</pre>
:ET