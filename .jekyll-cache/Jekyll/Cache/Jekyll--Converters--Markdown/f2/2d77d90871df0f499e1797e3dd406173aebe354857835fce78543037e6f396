I"Ú<h3><img class="alignnone  wp-image-6050" src="/assets/2016/11/ansible-tower-logotype-large-rgb-fullgrey-300x124.png" alt="ansible-tower-logotype-large-rgb-fullgrey-300x124" width="375" height="155" />Â <img class="alignnone  wp-image-5506" src="/assets/2016/11/plus_sign.gif" alt="plus_sign" width="113" height="113" />Â <img class="alignnone  wp-image-5513" src="/assets/2016/11/openshiftlogo.png" alt="openshiftlogo" width="148" height="172" /></h3>
<h3>Overview</h3>
<p>In this article we will look at how to use Ansible Tower to deploy and manage OpenShift environments. OpenShift of course uses Ansible as its deployment and configuration tool already. While that is great, using Tower provides several major advantages:</p>
<ul>
<li>UI for OpenShift deployment and configuration management</li>
<li>Secure store for credentials</li>
<li>RBAC and ability to delegate different responsibilities for OpenShift deployments</li>
<li>Easy to visualize and manage multiple OpenShift environments and even versions of OpenShift</li>
<li>History, audit trail and detailed logging in central location for all OpenShift environments and deployments</li>
</ul>
<p><!--more--></p>
<h3>Prepare OpenShift Environment</h3>
<p>In this example we will be doing an all-in-one deployment of OpenShift.Â The following steps should be done on OpenShift masters and nodes. Again here we just have one node since it is an all-in-one.</p>
<h4>CONFIGURE A VMs WITH FOLLOWING:</h4>
<ul>
<li>RHEL 7.2</li>
<li>2 CPUs</li>
<li>4096 RAM</li>
<li>30GB disk for OS</li>
<li>25GB disk for docker images</li>
</ul>
<h4>REGISTER VALID SUBSCRIPTION</h4>
<pre># subscription-manager register</pre>
<pre># subscription-manager attach --pool=843298293829382</pre>
<pre class="nowrap"># subscription-manager repos --disable="*"</pre>
<pre class="nowrap">#subscription-manager repos \
    --enable="rhel-7-server-rpms" \
    --enable="rhel-7-server-extras-rpms" \
    --enable="rhel-7-server-ose-3.3-rpms"</pre>
<h4>INSTALL REQUIRED TOOLS</h4>
<pre class="nowrap"># yum install -y wget git net-tools bind-utils iptables-services bridge-utils bash-completion</pre>
<h4>UPDATE</h4>
<pre class="nowrap"># yum update -y</pre>
<h4>RESTART OPENSHIFT MASTER</h4>
<pre class="nowrap"># systemctl reboot</pre>
<h4>CONFIGURE DOCKER</h4>
<pre class="nowrap"># yum install -y docker-1.10.3</pre>
<h4>ENABLE DOCKER DAEMON TO PULL FROM OPENSHIFT REGISTRY</h4>
<pre># vi /etc/sysconfig/docker
OPTIONS='--selinux-enabled --insecure-registry 172.30.0.0/16'</pre>
<h4>SETUP DOCKER STORAGE FOR OPENSHIFT REGISTRY</h4>
<p>Note: we will use the second disk for configuring docker storage.</p>
<pre class="nowrap"># cat &lt;&lt;EOF &gt; /etc/sysconfig/docker-storage-setup
DEVS=/dev/vdb
VG=docker-vg
EOF</pre>
<pre class="nowrap"># docker-storage-setup</pre>
<h4>ENABLE AND START DOCKER DAEMON</h4>
<pre># systemctl enable docker</pre>
<pre># systemctl start docker</pre>
<h3>Import OpenShift inventory into Ansible Tower</h3>
<p>These steps should be done directly on the host running Ansible Tower.</p>
<h4>Create Inventory in Ansible Tower</h4>
<p>Under inventories add a new inventory.</p>
<p><img class="alignnone size-full wp-image-6025" src="/assets/2016/11/ans_group.png" alt="ans_group" width="1832" height="498" /></p>
<h4>Create directors for OpenShift inventory</h4>
<pre># mkdir /root/ose3</pre>
<h4>Setup ansible-hosts file</h4>
<pre># vi /root/ose3/ansible-hosts
##########################
### OSEv3 Server Types ###
##########################
[OSEv3:children]
masters
nodes
etcd
</pre>
:ET